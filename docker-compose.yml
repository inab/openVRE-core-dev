services:
  my-mongodb:
    hostname: my-mongodb
    image: ghcr.io/mapoferri/mongo:latest
    container_name: my-mongodb
      #user: ${UID}:${GID}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_SERVER: ${MONGO_SERVER}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - ${MONGO_PORT}:27017
    command: mongod --port ${MONGO_PORT}
    env_file: .env
    volumes:
      - ./volumes/mongo_data:/data/db:rw
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
        net_vre:
            ipv4_address: 172.21.0.10

  mongo_seed:
    container_name: mongo_seed
    image:  ghcr.io/mapoferri/mongo:latest
    profiles: ["populate_DB"]
    #user: ${UID}:${GID}
    links:
      - my-mongodb
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_SERVER: ${MONGO_SERVER}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - ./mongo-seed:/mongo-seed
      - ./volumes/shared_data:/shared_data
      - ./front_end/openVRE/install:/install_data
    command:
      /mongo-seed/import.sh
    networks:
      - net_vre
    depends_on:
      - my-mongodb

  
  vault-server:
    container_name: vault-server
    image:  ghcr.io/mapoferri/vault:latest
    environment:
       VAULT_DEV_ROOT_TOKEN_ID: myroot
       VAULT_ADDR: "http://0.0.0.0:8200"
       VAULT_API_ADDR: "http://0.0.0.0:8200"
       VAULT_ADDRESS: "http://0.0.0.0:8200"
    ports:
      - "8200:8200"
      - "${VAULT_UI_PORT}:8080"
    volumes:
      - ./vault/config:/vault/config
      - ./vault/logs:/vault/logs
      - ./vault/file:/vault/file
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config /vault/config/vault.json
    networks:
             net_vre:
                ipv4_address: 172.21.0.18
    restart: always


  postgres:
    container_name: postgres
    image: ghcr.io/mapoferri/postgres
    profiles: ["local_auth"]
    environment:
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      net_vre:
        ipv4_address: 172.21.0.13


  keycloak:
    container_name: keycloak
    image: ghcr.io/mapoferri/quay.io/keycloak/keycloak
    profiles: ["local_auth"]
    environment:
        DB_VENDOR: ${DB_VENDOR}
        DB_ADDR: ${DB_ADDR}
        DB_DATABASE: ${DB_DATABASE}
        DB_USER: ${DB_USER}
        DB_SCHEMA: ${DB_SCHEMA}
        DB_PASSWORD: ${DB_PASSWORD}
        KEYCLOAK_USER: ${KEYCLOAK_USER}
        KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
        PROXY_ADDRESS_FORWARDING: "false"
        KEYCLOAK_FRONTEND_URL: "http://172.21.0.12:8080/auth" # temporary hack for this keycloak version
        #KEYCLOAK_FRONTEND_URL: ${FQDN_HOST_PROTOCOL}://${FQDN_HOST}/auth
    volumes:
        - ./keycloak/realms:/opt/jboss/keycloak/imports
    command:
            - '-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.migration.strategy=IGNORE_EXISTING'
    ports:
        - ${KEYCLOAK_PORT}:8080
    links:
        - postgres
    hostname: keycloak
    networks:
      net_vre:
        ipv4_address: 172.21.0.12
    depends_on:
      - postgres

  front_end:
    container_name: front_end
    hostname: ${FRONTEND_HOSTNAME}
    build:
      context: ./front_end/
    image: ghcr.io/mapoferri/front_end
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./front_end/act_qmaster:/var/lib/gridengine/default/common/act_qmaster
      - ./volumes/openVRE/tools:/var/www/html/openVRE/public/tools
      - ./front_end/openVRE/public/:/var/www/html/openVRE/public
      - ./front_end/openVRE/config:/var/www/html/openVRE/config
      - ./volumes/shared_data:/shared_data
    environment:
      - DOCKER_GROUP:${DOCKER_GROUP}
    links:
      - my-mongodb
    depends_on:
      - sgecore
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      net_vre:
        ipv4_address: 172.21.0.14

  sgecore:
    image: ghcr.io/mapoferri/sgecore
    build:
          context: ./sge
          args:
              SUBMITTER_HOSTNAME: "${FRONTEND_HOSTNAME}"
              DOCKER_GROUP: "${DOCKER_GROUP}"
    container_name: sgecore
    hostname: sgecore
    extra_hosts:
      - ${FRONTEND_HOSTNAME}:172.21.0.14
    environment:
      - DOCKER_GROUP:${DOCKER_GROUP}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rprivate
      - ./sge/configuration:/tmp/configuration:rprivate
      - ./sge/configuration:/etc/gridengine/configuration:rprivate
      - ./volumes/shared_data:/shared_data:rshared
      - ./volumes/shared_scripts:/shared_scripts:rshared
    devices:
      - '/dev/fuse:/dev/fuse'
    cap_add:
        - SYS_ADMIN
    security_opt:
        - apparmor:unconfined
    stdin_open: true
    networks:
      - net_vre
    ports:
      - 6444:6444
    restart: always

networks:
  net_vre:
    name: ${NETWORK_NAME}
    #Use on openStack cloud
    #driver_opts:
      #com.docker.network.driver.mtu: 1442
    ipam:
      config:
            - subnet: 172.21.0.0/24
