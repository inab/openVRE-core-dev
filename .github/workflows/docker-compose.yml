name: Deploy Docker Compose

on:
  push:
    branches:
      - techton2025
  pull_request:
    branches:
      - techton2025

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "FQDN_HOST=${{ secrets.FQDN_HOST }}" >> .env
          echo "FQDN_HOST_PROTOCOL=${{ secrets.FQDN_HOST_PROTOCOL }}" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "MONGO_PORT=${{ secrets.MONGO_PORT }}" >> .env
          echo "MONGO_INITDB_USERNAME=${{ secrets.MONGO_INITDB_USERNAME }}" >> .env
          echo "MONGO_INITDB_PASSWORD=${{ secrets.MONGO_INITDB_PASSWORD }}" >> .env
          echo "MONGO_SERVER=${{ secrets.MONGO_SERVER }}" >> .env
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> .env
          echo "MONGO_INITDB_COLLECTION=${{ secrets.MONGO_INITDB_COLLECTION }}" >> .env
          echo "NETWORK_NAME=${{ secrets.NETWORK_NAME }}" >> .env
          echo "FRONTEND_PORT=${{ secrets.FRONTEND_PORT }}" >> .env
          echo "VAULT_PORT=${{ secrets.VAULT_PORT }}" >> .env
          echo "VAULT_UI_PORT=${{ secrets.VAULT_UI_PORT }}" >> .env
          echo "VAULT_ADDR=${{ secrets.VAULT_ADDR }}" >> .env
          echo "VAULT_API_ADDR=${{ secrets.VAULT_API_ADDR }}" >> .env
          echo "VAULT_ADDRESS=${{ secrets.VAULT_ADDRESS }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "DB_VENDOR=${{ secrets.DB_VENDOR }}" >> .env
          echo "DB_ADDR=${{ secrets.DB_ADDR }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> .env
          echo "KEYCLOAK_PORT=${{ secrets.KEYCLOAK_PORT }}" >> .env
          echo "KEYCLOAK_USER=${{ secrets.KEYCLOAK_USER }}" >> .env
          echo "KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD }}" >> .env
          echo "FRONTEND_PORT=${{ secrets.FRONTEND_PORT }}" >> .env
          echo "FRONTEND_HOSTNAME=${{ secrets.FRONTEND_HOSTNAME }}" >> .env
          echo "DOCKER_GROUP=${{ secrets.DOCKER_GROUP }}" >> .env

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
      - name: Tag and Push Docker Images to GHCR
        run: |
          for service in $(docker-compose -f docker-compose.yml config --services); do
            image_name="ghcr.io/${{ github.repository_owner }}/$service:latest"
            docker tag $service $image_name
            docker push $image_name
          done


      - name: Start Docker Compose
        run: docker-compose up -d --build

      - name: Verify running containers
        run: docker ps -a

      - name: Clean Up
        run: |
          docker system prune -f
